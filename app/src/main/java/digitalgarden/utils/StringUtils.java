package digitalgarden.utils;

import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;

import digitalgarden.logger.Logger;

public class StringUtils
	{
	private final static int _00_ = 0x00; 
	private final static byte[] abc={
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 0 -         
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 8 -         
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 16 -         
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 24 -         
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 32 -  !"#$%&'
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 40 - ()*+,-./

		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 	// 48 - 01234567
		0x38, 0x39, _00_, _00_, _00_, _00_, _00_, _00_, 	// 56 - 89:;<=>?
		
		_00_, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 	// 64 - @ABCDEFG
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 	// 72 - HIJKLMNO
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 	// 80 - PQRSTUVW
		0x58, 0x59, 0x5a, _00_, _00_, _00_, _00_, _00_, 	// 88 - XYZ[\]^_
		
		_00_, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 	// 96 - `abcdefg
		0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 	// 104 - hijklmno
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 	// 112 - pqrstuvw
		0x58, 0x59, 0x5a, _00_, _00_, _00_, _00_, _00_, 	// 120 - xyz{|}~
		
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 128 - 
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 136 - 
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 144 - 
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 152 - 
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 160 -  ¡¢£¤¥¦§
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 168 - ¨©ª«¬­®¯
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 176 - °±²³´µ¶·
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 184 - ¸¹º»¼½¾¿
		
		0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x43, 	// 192 - ÀÁÂÃÄÅÆÇ
		0x45, 0x45, 0x45, 0x45, 0x49, 0x49, 0x49, 0x49, 	// 200 - ÈÉÊËÌÍÎÏ
		_00_, 0x4e, 0x4f, 0x4f, 0x4f, 0x4f, 0x4f, _00_, 	// 208 - ÐÑÒÓÔÕÖ×
		_00_, 0x55, 0x55, 0x55, 0x55, _00_, _00_, 0x53, 	// 216 - ØÙÚÛÜÝÞß
		
		0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x43, 	// 224 - àáâãäåæç
		0x45, 0x45, 0x45, 0x45, 0x49, 0x49, 0x49, 0x49, 	// 232 - èéêëìíîï
		_00_, 0x4e, 0x4f, 0x4f, 0x4f, 0x4f, 0x4f, _00_, 	// 200 - ðñòóôõö÷
		_00_, 0x55, 0x55, 0x55, 0x55, _00_, _00_, 0x59, 	// 248 - øùúûüýþÿ
		
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 256 - ĀāĂăĄąĆć
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 264 - ĈĉĊċČčĎď
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 272 - ĐđĒēĔĕĖė
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 280 - ĘęĚěĜĝĞğ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 288 - ĠġĢģĤĥĦħ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 296 - ĨĩĪīĬĭĮį
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 304 - İıĲĳĴĵĶķ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 312 - ĸĹĺĻļĽľĿ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 320 - ŀŁłŃńŅņŇ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 328 - ňŉŊŋŌōŎŏ
		0x4f, 0x4f, 0x4f, 0x4f, _00_, _00_, _00_, _00_, 	// 336 - ŐőŒœŔŕŖŗ
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 344 - ŘřŚśŜŝŞş
		_00_, _00_, _00_, _00_, _00_, _00_, _00_, _00_, 	// 352 - ŠšŢţŤťŦŧ
		0x55, 0x55, _00_, _00_, _00_, _00_, _00_, _00_, 	// 360 - ŨũŪūŬŭŮů
		0x55, 0x55, _00_, _00_, _00_, _00_, _00_, _00_, 	// 368 - ŰűŲųŴŵŶŷ
		0x59, _00_, _00_, _00_, _00_, _00_, _00_			// 376 - ŸŹźŻżŽž
		};

	public static String normalize( String text )
		{
		int c;
		
		StringReader inText = new StringReader( text );
		StringWriter outText = new StringWriter();
		
		do 
			{
			try
				{
				c = inText.read ( );
				}
			catch (IOException e)
				{
				break;
				}

			if ( c>0 && c < abc.length )
				{
				if ( abc[ c ] != _00_ )
					outText.write( (int)abc[ c ] );
				}
			} while (c != -1);
			
		Logger.note("NORMALIZE from [" + text + "] to [" + outText.toString() + "]");
		
		return outText.toString();
		}

	
	// Commons Lang StringEscapeUtils osztályát. http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/
	// StringUtils.replaceEach
	public static String convertToEscaped( String text )
		{
		if (text == null)
			return "";
		else
			return text
			.replace("\n", "\\n")
			.replace("\t", "\\t");		
		}
		
	public static String revertFromEscaped( String escapedText )
		{
		if (escapedText == null)
			return "";
		else
			return escapedText
			.replace("\\n", "\n")
			.replace("\\t", "\t");
		}
	}
